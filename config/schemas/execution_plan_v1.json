{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Execution Plan Schema",
  "description": "Schema for validating execution plan configurations used across the C4H system",
  "type": "object",
  "properties": {
    "enabled": {
      "type": "boolean",
      "description": "Whether this execution plan is enabled. If false, the plan will not be executed.",
      "default": true
    },
    "description": {
      "type": "string",
      "description": "Optional description of this execution plan."
    },
    "steps": {
      "type": "array",
      "description": "Ordered list of steps to execute in this plan",
      "items": {
        "$ref": "#/definitions/step"
      }
    },
    "error_handler": {
      "type": "object",
      "description": "Plan-level error handling configuration",
      "properties": {
        "mode": {
          "type": "string",
          "enum": ["fail_fast", "continue", "retry"],
          "description": "Error handling strategy for steps in this plan"
        },
        "max_retries": {
          "type": "integer",
          "minimum": 0,
          "description": "Maximum number of retries for the entire plan (if mode is retry)"
        },
        "retry_delay_seconds": {
          "type": "number",
          "minimum": 0,
          "description": "Delay between retries in seconds"
        }
      },
      "additionalProperties": false
    }
  },
  "required": ["steps"],
  "additionalProperties": false,
  
  "definitions": {
    "step": {
      "type": "object",
      "description": "A single step in an execution plan",
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name for this step within the plan"
        },
        "type": {
          "type": "string",
          "enum": ["skill_call", "agent_call", "team_call", "llm_call", "loop", "branch", "set_value"],
          "description": "Type of operation to perform in this step"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of this step"
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "description": "Optional condition that must be true for this step to execute"
        },
        "output_field": {
          "type": "string",
          "description": "Dot-notation path in the context where the step's result should be stored"
        },
        "timeout_seconds": {
          "type": "number",
          "minimum": 0,
          "description": "Optional timeout for this step in seconds"
        },
        "stop_on_failure": {
          "type": "boolean",
          "description": "Whether to stop the plan execution if this step fails",
          "default": true
        },
        "rules": {
          "type": "array",
          "description": "Routing rules that determine the next step to execute",
          "items": {
            "$ref": "#/definitions/rule"
          }
        },
        "skill": {
          "type": "string",
          "description": "Name of the skill to call (for skill_call type)"
        },
        "params": {
          "type": "object",
          "description": "Parameters to pass to the skill, agent, or LLM"
        },
        "node": {
          "type": "string",
          "description": "Name of the agent instance to call (for agent_call type)"
        },
        "input_params": {
          "type": "object",
          "description": "Parameters to pass to the agent"
        },
        "target_team": {
          "type": "string",
          "description": "ID of the team to call (for team_call type)"
        },
        "iterate_on": {
          "type": "string",
          "description": "Dot-notation path to the collection to iterate over (for loop type)"
        },
        "loop_variable": {
          "type": "string",
          "description": "Name to assign to the current iteration value in the context"
        },
        "body": {
          "type": "array",
          "description": "Steps to execute for each iteration of the loop",
          "items": {
            "$ref": "#/definitions/step"
          }
        },
        "branches": {
          "type": "array",
          "description": "Conditional branches (for branch type)",
          "items": {
            "type": "object",
            "properties": {
              "condition": {
                "$ref": "#/definitions/condition"
              },
              "target": {
                "oneOf": [
                  {"type": "string", "description": "Name of the step to jump to"},
                  {"type": "integer", "description": "Index of the step to jump to"}
                ]
              }
            },
            "required": ["condition", "target"],
            "additionalProperties": false
          }
        },
        "field": {
          "type": "string",
          "description": "Dot-notation path in the context to set (for set_value type)"
        },
        "value": {
          "description": "Value to set at the specified field"
        },
        "provider": {
          "type": "string",
          "description": "LLM provider to use (for llm_call type)"
        },
        "model": {
          "type": "string",
          "description": "Model to use for LLM call"
        },
        "temperature": {
          "type": "number",
          "minimum": 0,
          "maximum": 2,
          "description": "Sampling temperature for LLM call"
        },
        "prompt": {
          "type": "string",
          "description": "Prompt template to use for LLM call"
        },
        "system_message": {
          "type": "string",
          "description": "System message to use for LLM call"
        }
      },
      "required": ["name", "type"],
      "allOf": [
        {
          "if": {
            "properties": { "type": { "enum": ["skill_call"] } }
          },
          "then": {
            "required": ["skill"]
          }
        },
        {
          "if": {
            "properties": { "type": { "enum": ["agent_call"] } }
          },
          "then": {
            "required": ["node"]
          }
        },
        {
          "if": {
            "properties": { "type": { "enum": ["team_call"] } }
          },
          "then": {
            "required": ["target_team"]
          }
        },
        {
          "if": {
            "properties": { "type": { "enum": ["loop"] } }
          },
          "then": {
            "required": ["iterate_on", "loop_variable", "body"]
          }
        },
        {
          "if": {
            "properties": { "type": { "enum": ["branch"] } }
          },
          "then": {
            "required": ["branches"]
          }
        },
        {
          "if": {
            "properties": { "type": { "enum": ["set_value"] } }
          },
          "then": {
            "required": ["field", "value"]
          }
        },
        {
          "if": {
            "properties": { "type": { "enum": ["llm_call"] } }
          },
          "then": {
            "required": ["prompt"]
          }
        }
      ],
      "additionalProperties": false
    },
    
    "condition": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["simple"],
              "default": "simple"
            },
            "field": {
              "type": "string",
              "description": "Dot-notation path to the value to check"
            },
            "operator": {
              "type": "string",
              "enum": ["equals", "not_equals", "contains", "greater_than", "less_than", "exists", "is_empty"],
              "default": "equals"
            },
            "value": {
              "description": "Expected value for comparison"
            }
          },
          "required": ["field", "operator"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["and"]
            },
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/condition"
              },
              "minItems": 1
            }
          },
          "required": ["type", "conditions"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["or"]
            },
            "conditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/condition"
              },
              "minItems": 1
            }
          },
          "required": ["type", "conditions"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["not"]
            },
            "condition": {
              "$ref": "#/definitions/condition"
            }
          },
          "required": ["type", "condition"],
          "additionalProperties": false
        }
      ]
    },
    
    "rule": {
      "type": "object",
      "description": "Rule for determining the next step to execute",
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "description": "Condition that determines if this rule applies"
        },
        "route_to_step": {
          "oneOf": [
            {"type": "string", "description": "Name of the step to route to"},
            {"type": "integer", "description": "Index of the step to route to"}
          ]
        },
        "action": {
          "type": "string",
          "enum": ["exit_plan_with_success", "exit_plan_with_failure", "break_loop", "continue_loop"],
          "description": "Action to perform instead of routing to a specific step"
        }
      },
      "oneOf": [
        {"required": ["condition", "route_to_step"]},
        {"required": ["condition", "action"]}
      ],
      "additionalProperties": false
    }
  }
}